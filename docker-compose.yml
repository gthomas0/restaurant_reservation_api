version: '3.7'

services:
    postgres-db:
        restart: always
        image: postgres:latest
        privileged: true
        healthcheck:
            test: [ "CMD", "pg_isready", "-q", "-U", "postgres" ]
            timeout: 45s
            interval: 10s
            retries: 10
        ports:
            - 5432:5432
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            PGDATA: /var/lib/postgresql/data/pgdata
        volumes:
            - ./database/postgres/data:/var/lib/postgresql/data/pgdata
        networks:
            restaurant_net:
                aliases:
                    - postgres_net

    api:
        build:
            context: .
            dockerfile: Dockerfile
        volumes:
            - '.:/project'
        ports:
            - 10000:10000
        environment:
            - DB_HOST=restaurant_reservation_api_postgres-db_1
            - DB_USER=postgres
            - DB_PASS=postgres
            - DB_NAME=restaurants
            - DB_PORT=5432
        depends_on:
            postgres-db:
                condition: service_healthy
        networks:
            restaurant_net:
                aliases:
                    - api_net

networks:
    restaurant_net:
        driver: bridge
